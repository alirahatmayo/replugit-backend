# Generated by Django 4.2.2 on 2025-01-30 17:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Internal unique order ID from platform.', max_length=100, unique=True)),
                ('customer_order_id', models.CharField(blank=True, help_text='Customer Order ID from the platform.', max_length=100, null=True)),
                ('platform', models.CharField(choices=[('walmart_ca', 'Walmart Canada'), ('walmart_us', 'Walmart US'), ('amazon', 'Amazon'), ('shopify', 'Shopify'), ('bestbuy', 'BestBuy'), ('manual', 'Manual Entry')], help_text='Platform where the order originated.', max_length=50)),
                ('order_date', models.DateTimeField(auto_now_add=True, help_text='Date when the order was created.')),
                ('delivery_deadline', models.DateTimeField(blank=True, help_text='Deadline for order delivery.', null=True)),
                ('ship_date', models.DateTimeField(blank=True, help_text='Date the order was shipped.', null=True)),
                ('state', models.CharField(choices=[('created', 'Created'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('partially_returned', 'Partially Returned'), ('returned', 'Returned'), ('cancelled', 'Cancelled')], default='created', help_text='Current order status.', max_length=20)),
                ('platform_specific_data', models.JSONField(blank=True, default=dict, help_text='Platform-specific order details.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp for the last update to the order.')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='customers.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_data', models.JSONField(blank=True, default=dict, help_text='JSON field storing pricing and tax details for the item.')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, help_text='The total price of the item, including taxes.', max_digits=10, null=True)),
                ('quantity', models.PositiveIntegerField(default=1, help_text='The quantity of the product in this order item.')),
                ('status', models.CharField(choices=[('pending', 'Pending Assignment'), ('assigned', 'Assigned'), ('shipped', 'Shipped'), ('returned', 'Returned')], default='pending', help_text='The current status of the order item.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The timestamp when this item was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The timestamp when this item was last updated.')),
                ('order', models.ForeignKey(help_text='The parent order this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(help_text='The product associated with this order item.', on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('product_unit', models.ForeignKey(blank=True, help_text='The specific product unit assigned to this order item (for serialized products).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_item', to='products.productunit')),
            ],
            options={
                'indexes': [models.Index(fields=['order'], name='idx_order'), models.Index(fields=['product'], name='idx_product'), models.Index(fields=['status'], name='idx_status')],
            },
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'product'), name='unique_product_per_order'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['platform'], name='idx_platform'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['state'], name='idx_state'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='idx_order_date'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer'], name='idx_customer'),
        ),
    ]
