# Generated by Django 5.1.3 on 2025-03-27 22:19

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductQCTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('product_type_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('visual_testing_template', models.JSONField(default=dict)),
                ('functional_testing_template', models.JSONField(default=dict)),
                ('electrical_testing_template', models.JSONField(default=dict)),
                ('packaging_testing_template', models.JSONField(default=dict)),
                ('measurements_template', models.JSONField(default=dict)),
                ('specs_template', models.JSONField(default=dict)),
                ('visual_testing_required', models.BooleanField(default=True)),
                ('functional_testing_required', models.BooleanField(default=True)),
                ('electrical_testing_required', models.BooleanField(default=True)),
                ('packaging_testing_required', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_qc_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product QC Template',
                'verbose_name_plural': 'Product QC Templates',
                'ordering': ['product_type_name', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QCFieldDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type_name', models.CharField(max_length=100)),
                ('field_name', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('boolean', 'Boolean'), ('number', 'Number'), ('string', 'Text'), ('enum', 'Enumeration'), ('image', 'Image')], default='boolean', max_length=20)),
                ('test_category', models.CharField(choices=[('visual', 'Visual Testing'), ('functional', 'Functional Testing'), ('electrical', 'Electrical Testing'), ('packaging', 'Packaging Testing'), ('measurements', 'Measurements'), ('specs', 'Specifications')], max_length=30)),
                ('required', models.BooleanField(default=False)),
                ('default_value', models.JSONField(blank=True, null=True)),
                ('enum_options', models.JSONField(blank=True, help_text='List of options for enum type', null=True)),
                ('display_order', models.PositiveIntegerField(default=100)),
            ],
            options={
                'ordering': ['test_category', 'display_order', 'field_name'],
                'unique_together': {('product_type_name', 'test_category', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='QualityControl',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('received_quantity', models.PositiveIntegerField(default=0)),
                ('approved_quantity', models.PositiveIntegerField(default=0)),
                ('rejected_quantity', models.PositiveIntegerField(default=0)),
                ('reference', models.CharField(blank=True, help_text='PO number or reference', max_length=100, null=True)),
                ('batch_code', models.CharField(blank=True, max_length=50, null=True)),
                ('carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Inspection'), ('in_progress', 'Inspection In Progress'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('partially_approved', 'Partially Approved')], default='pending', max_length=20)),
                ('supplier_info', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('inspection_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspected_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_qc', to=settings.AUTH_USER_MODEL)),
                ('inspected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspected_qc', to=settings.AUTH_USER_MODEL)),
                ('inventory_receipt', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_control', to='inventory.inventoryreceipt')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name': 'Quality Control',
                'verbose_name_plural': 'Quality Controls',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductUnitQC',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('visual_testing', models.JSONField(default=dict, help_text='Visual inspection details')),
                ('functional_testing', models.JSONField(default=dict, help_text='Functional test details')),
                ('electrical_testing', models.JSONField(default=dict, help_text='Electrical test details')),
                ('packaging_testing', models.JSONField(default=dict, help_text='Packaging inspection details')),
                ('measurements', models.JSONField(default=dict, help_text='Measurements (e.g., power, weight)')),
                ('specs', models.JSONField(default=dict, help_text='Device specifications')),
                ('test_notes', models.TextField(blank=True, null=True)),
                ('tested_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('passed', models.BooleanField(default=True, help_text='Overall QC result computed from tests')),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], default='F', help_text='Overall QC Grade (manual input)', max_length=1)),
                ('qc_image', models.ImageField(blank=True, help_text='Image captured during QC', null=True, upload_to='qc_images/')),
                ('tested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tested_units', to=settings.AUTH_USER_MODEL)),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_details', to='products.productunit')),
                ('batch_qc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unit_qcs', to='quality_control.qualitycontrol')),
            ],
            options={
                'verbose_name': 'Product Unit QC',
                'verbose_name_plural': 'Product Unit QC Records',
                'ordering': ['-tested_at'],
            },
        ),
    ]
