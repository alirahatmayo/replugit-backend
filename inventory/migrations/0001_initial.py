# Generated by Django 5.1.3 on 2025-03-27 22:19

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('available_quantity', models.IntegerField(default=0)),
                ('reserved_quantity', models.IntegerField(default=0)),
                ('platform', models.CharField(blank=True, max_length=50, null=True)),
                ('platform_sku', models.CharField(blank=True, max_length=100, null=True)),
                ('reorder_point', models.IntegerField(default=5, help_text='Quantity at which to reorder')),
                ('reorder_quantity', models.IntegerField(default=10, help_text='Suggested reorder amount')),
                ('status', models.CharField(choices=[('IN_STOCK', 'In Stock'), ('LOW_STOCK', 'Low Stock'), ('OUT_OF_STOCK', 'Out of Stock'), ('BACKORDER', 'Backordered'), ('DISCONTINUED', 'Discontinued')], default='OUT_OF_STOCK', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('last_count', models.DateTimeField(blank=True, help_text='Last physical count date', null=True)),
            ],
            options={
                'verbose_name_plural': 'Inventories',
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity_change', models.IntegerField(help_text='Can be positive or negative')),
                ('reason', models.CharField(choices=[('MANUAL', 'Manual Adjustment'), ('SALE', 'Sale'), ('PURCHASE', 'Purchase/Restock'), ('RETURN', 'Customer Return'), ('SYNC', 'Platform Sync'), ('TRANSFER', 'Location Transfer'), ('COUNT', 'Physical Count'), ('DAMAGED', 'Damaged/Write-off')], max_length=20)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_quantity', models.IntegerField()),
                ('new_quantity', models.IntegerField()),
                ('change', models.IntegerField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason', models.CharField(choices=[('MANUAL', 'Manual Adjustment'), ('SALE', 'Sale'), ('PURCHASE', 'Purchase/Restock'), ('RETURN', 'Customer Return'), ('SYNC', 'Platform Sync'), ('TRANSFER', 'Location Transfer'), ('COUNT', 'Physical Count'), ('DAMAGED', 'Damaged/Write-off')], max_length=20)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Inventory histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InventoryReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('receipt_date', models.DateTimeField(auto_now_add=True)),
                ('reference', models.CharField(blank=True, help_text='PO number or reference', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('batch_code', models.CharField(blank=True, help_text='Optional batch identifier', max_length=20, null=True)),
                ('seller_info', models.JSONField(blank=True, help_text='Detailed information about the seller/supplier', null=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('shipping_tracking', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('requires_unit_qc', models.BooleanField(default=False, help_text='Whether each unit requires individual QC')),
                ('create_product_units', models.BooleanField(default=True, help_text='Whether to create individual product units for this receipt')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether this receipt has been processed')),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Inventory Receipt',
                'verbose_name_plural': 'Inventory Receipts',
                'ordering': ['-receipt_date'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('default_location', models.BooleanField(default=False, help_text='Default location for new items')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductUnitReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField(help_text='Sequence number within this receipt')),
            ],
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_threshold', models.IntegerField(default=5)),
                ('critical_threshold', models.IntegerField(default=2)),
                ('notify_emails', models.TextField(blank=True, help_text='Comma-separated list of emails to notify', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
            ],
        ),
    ]
