# Generated by Django 5.1.3 on 2025-03-27 22:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReceiptBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, help_text='PO number or reference', max_length=100, null=True)),
                ('receipt_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('batch_code', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('shipping_tracking', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('seller_info', models.JSONField(blank=True, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
            ],
            options={
                'verbose_name': 'Receipt Batch',
                'verbose_name_plural': 'Receipt Batches',
                'ordering': ['-receipt_date'],
            },
        ),
        migrations.CreateModel(
            name='BatchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('skip_inventory_receipt', models.BooleanField(default=False, help_text="If true, this item won't create an inventory receipt")),
                ('requires_unit_qc', models.BooleanField(default=False, help_text='Whether each unit requires quality control')),
                ('create_product_units', models.BooleanField(default=True, help_text='Whether to create individual product units')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inventory_receipt', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_batch_item', to='inventory.inventoryreceipt')),
                ('parent_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.productfamily', verbose_name='Product Family')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='receiving.receiptbatch')),
            ],
            options={
                'ordering': ['created_at'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('product__isnull', False)), fields=('batch', 'product'), name='unique_batch_product'), models.UniqueConstraint(condition=models.Q(('parent_product__isnull', False)), fields=('batch', 'parent_product'), name='unique_batch_parent_product'), models.CheckConstraint(condition=models.Q(('product__isnull', False), ('parent_product__isnull', False), _connector='OR'), name='batch_item_has_product_or_parent'), models.CheckConstraint(condition=models.Q(('product__isnull', False), ('parent_product__isnull', False), _negated=True), name='batch_item_not_both_product_types')],
            },
        ),
    ]
